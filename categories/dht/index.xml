<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DHT on Yipsen Ye</title>
    <link>http://yipsen.github.io/categories/dht/</link>
    <description>Recent content in DHT on Yipsen Ye</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 16 Jan 2022 16:31:43 +0000</lastBuildDate><atom:link href="http://yipsen.github.io/categories/dht/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01 基础知识（一）DHT 网络的演进</title>
      <link>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/01-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80dht-%E7%BD%91%E7%BB%9C%E7%9A%84%E6%BC%94%E8%BF%9B/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      
      <guid>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/01-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80dht-%E7%BD%91%E7%BB%9C%E7%9A%84%E6%BC%94%E8%BF%9B/</guid>
      <description>background knowledge dht模块 dht模块实现一个dht节点，用来和网上的其他dht节点进行通信，在通信的过程中完成收集磁力链接的任务。
bt模块 bt模块实现一个bt协议的客户端程序，当发现一个磁力链接可以下载的时候，通过bt客户端和远程的服务器通信，下载种子的元数据，
原理解析 0x01 相关术语   P2P网络 对等计算（Peer to Peer，简称p2p）可以简单的定义成通过直接交换来共享计算机资源和服务，而对等计算模型应用层形成的网络通常称为对等网络。相信大家都用过迅雷，就不多说了。
  DHT网络 DHT（Distributed Hash Table，分布式哈希表），DHT由节点组成，它存储peer的位置，是一种分布式存储方法。在不需要服务器的情况下，每个客户端负责一个小范围的路由，并负责存储一小部分数据，从而实现整个DHT网络的寻址和存储，其中BT客户端包含一个DHT节点，用来联系DHT中其他节点，从而得到peer的位置，进而通过BitTorrent协议下载。 简单来说DHT就是负责管理提供信息和服务节点的管理与路由功能，两个需要区分的概念： “peer” 是在一个 TCP 端口上监听的客户端/服务器，它实现了 BitTorrent 协议。 “节点” 是在一个 UDP 端口上监听的客户端/服务器，它实现了 DHT(分布式哈希表) 协议。
  Kademlia算法 Kademlia是DHT网络的一种实现。在Kademlia网络中，距离是通过异或(XOR)计算的，结果为无符号整数。distance(A, B) = |A xor B|，值越小表示越近。
  KRPC协议 KRPC 是节点之间的交互协议，是由 bencode 编码组成的一个简单的 RPC 结构，他使用 UDP 报文发送。一个独立的请求包被发出去然后一个独立的包被回复。这个协议没有重发。它包含 3 种消息：请求，回复和错误。对DHT协议而言，这里有 4 种请求：
   method description     ping 检查一个节点是否有效   find_node 向一个节点发送查找节点的请求，在初始路由表或验证桶是否存活时使用   get_peers 向一个节点发送查找资源的请求   announce_peer 向一个节点发送自己已经开始下载某个资源的通知   一条KRPC消息由一个独立的字典组成，其中t和y关键字是每条信息都包含的       MagNet协议 MagNet协议，也就是磁力链接。是一个通过sha1算法生成一个20字节长的字符串，P2P客户端使用磁力链接，下载资源的种子文件，然后根据种子文件下载资源。</description>
    </item>
    
    <item>
      <title>02 基础知识（二）Kademlia 算法</title>
      <link>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/02-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%8Ckademlia-%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      
      <guid>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/02-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%8Ckademlia-%E7%AE%97%E6%B3%95/</guid>
      <description></description>
    </item>
    
    <item>
      <title>03 基础知识（三）KRPC 协议解析</title>
      <link>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/03-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%89krpc-%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      
      <guid>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/03-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%89krpc-%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</guid>
      <description>请求样例 [SAMPLE_INFOHASHES] { &amp;ldquo;ip&amp;rdquo;:&amp;ldquo;127.0.0.1&amp;rdquo;, &amp;ldquo;port&amp;rdquo;:&amp;ldquo;7000&amp;rdquo;, &amp;ldquo;message&amp;rdquo;:{ &amp;ldquo;t&amp;rdquo;:&amp;ldquo;7348&amp;rdquo;, &amp;ldquo;y&amp;rdquo;:&amp;ldquo;q&amp;rdquo;, &amp;ldquo;q&amp;rdquo;:&amp;ldquo;sample_infohashes&amp;rdquo;, &amp;ldquo;a&amp;rdquo;:{ &amp;ldquo;id&amp;rdquo;:&amp;ldquo;832545b71150635d4970c548ba0918a8085023f2&amp;rdquo;, &amp;ldquo;target&amp;rdquo;:&amp;ldquo;29dbf3a3a69a336921569e900bb131efda2e7ff4&amp;rdquo; } } }
[ANNOUNCE_PEER] { &amp;ldquo;ip&amp;rdquo;:&amp;ldquo;112.113.162.69&amp;rdquo;, &amp;ldquo;port&amp;rdquo;:&amp;ldquo;17535&amp;rdquo;, &amp;ldquo;message&amp;rdquo;:{ &amp;ldquo;t&amp;rdquo;:&amp;ldquo;a7f4&amp;rdquo;, &amp;ldquo;y&amp;rdquo;:&amp;ldquo;q&amp;rdquo;, &amp;ldquo;q&amp;rdquo;:&amp;ldquo;announce_peer&amp;rdquo;, &amp;ldquo;a&amp;rdquo;:{ &amp;ldquo;id&amp;rdquo;:&amp;ldquo;ef41813e6f2555438722462f24a10db858106887&amp;rdquo;, &amp;ldquo;info_hash&amp;rdquo;:&amp;ldquo;186ef18044f042ef759e3f48b7aa284c9c084ed1&amp;rdquo;, &amp;ldquo;port&amp;rdquo;:7071, &amp;ldquo;token&amp;rdquo;:&amp;ldquo;TENET&amp;rdquo; } } }</description>
    </item>
    
    <item>
      <title>04 基础知识（四）Bencode 编码</title>
      <link>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/04-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%9B%9Bbencode-%E7%BC%96%E7%A0%81/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      
      <guid>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/04-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%9B%9Bbencode-%E7%BC%96%E7%A0%81/</guid>
      <description></description>
    </item>
    
    <item>
      <title>05 基础知识（五）Magnet 磁链与 Torrent 文件</title>
      <link>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/05-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%94magnet-%E7%A3%81%E9%93%BE%E4%B8%8E-torrent-%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      
      <guid>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/05-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%94magnet-%E7%A3%81%E9%93%BE%E4%B8%8E-torrent-%E6%96%87%E4%BB%B6/</guid>
      <description>MAGNET 磁链结构  magnet:?xt=urn:btih:60c423137f453492ca34c2d69f6f573408dca35a&amp;amp;dn=Inglourious.Basterds.DVDRip.XviD-iMBT.avi&amp;amp;tr=http%3A%2F%2Ftracker.publicbt.com%2Fannounce
    字段 全称 解析     magnet magnet 协议名。   xt exact topic 包含文件哈希值的统一资源名称。   urn uniform resource name URN 表示资源名   btih BitTorrent info hash 种子散列函数，这里还可以使用ED2K，AICH，SHA1和MD5等。这个值是文件的标识符，是不可缺少的。   dn display name 表示向用户显示的文件名。这一项是选填的。   tr tracker 表示tracker服务器的地址。这一项也是选填的。   ws webseed 表示网络种子。     注：btih是应用程序定义的实验参数，必须以&amp;quot;x.&amp;ldquo;开头。[4-5] 标准还建议同类的多个参数可以在参数名称后面加上&amp;rdquo;.1&amp;quot;, &amp;ldquo;.2&amp;quot;等来使用， 例如： magnet:?xt.1=urn:sha1:YNCKHTQCWBTRNJIV4WNAE52SJUQCZO5C&amp;amp;xt.2=urn:sha1:TXGCZQTH26NL6OUQAJJPFALHG2LTGBC7
 TORRENT 文件结构 { &amp;#34;announce&amp;#34;: &amp;#34;&amp;#34;, // tracker的主服务器  &amp;#34;announce-list&amp;#34;: [], // tracker服务器列表  &amp;#34;comment&amp;#34;: &amp;#34;&amp;#34;, // 种子文件的注释  &amp;#34;comment.</description>
    </item>
    
    <item>
      <title>06 基础知识（六）μTP 协议</title>
      <link>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/06-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%AD%CE%BCtp-%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      
      <guid>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/06-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%AD%CE%BCtp-%E5%8D%8F%E8%AE%AE/</guid>
      <description></description>
    </item>
    
    <item>
      <title>08 爬虫设计（一）模块划分与核心逻辑</title>
      <link>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/08-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%A8%A1%E5%9D%97%E5%88%92%E5%88%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E9%80%BB%E8%BE%91/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      
      <guid>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/08-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%A8%A1%E5%9D%97%E5%88%92%E5%88%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E9%80%BB%E8%BE%91/</guid>
      <description></description>
    </item>
    
    <item>
      <title>09 爬虫设计（二）核心组件-路由表设计</title>
      <link>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/09-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%BA%8C%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6-%E8%B7%AF%E7%94%B1%E8%A1%A8%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      
      <guid>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/09-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%BA%8C%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6-%E8%B7%AF%E7%94%B1%E8%A1%A8%E8%AE%BE%E8%AE%A1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>10 爬虫设计（三）使用 Netty 的 Handle 链与统一异常处理</title>
      <link>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/10-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%B8%89%E4%BD%BF%E7%94%A8-netty-%E7%9A%84-handle-%E9%93%BE%E4%B8%8E%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      
      <guid>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/10-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%B8%89%E4%BD%BF%E7%94%A8-netty-%E7%9A%84-handle-%E9%93%BE%E4%B8%8E%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid>
      <description></description>
    </item>
    
    <item>
      <title>11 爬虫设计（四）监控采集</title>
      <link>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/11-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E5%9B%9B%E7%9B%91%E6%8E%A7%E9%87%87%E9%9B%86/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      
      <guid>http://yipsen.github.io/posts/%E7%BD%91%E7%BB%9C/dht/11-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E5%9B%9B%E7%9B%91%E6%8E%A7%E9%87%87%E9%9B%86/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
