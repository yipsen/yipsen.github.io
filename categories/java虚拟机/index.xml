<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JAVA虚拟机 on Yipsen Ye</title>
    <link>http://localhost:8080/categories/java%E8%99%9A%E6%8B%9F%E6%9C%BA/</link>
    <description>Recent content in JAVA虚拟机 on Yipsen Ye</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 01 Mar 2023 08:34:41 +0800</lastBuildDate>
    <atom:link href="http://localhost:8080/categories/java%E8%99%9A%E6%8B%9F%E6%9C%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>jstat 工具使用</title>
      <link>http://localhost:8080/java/java-%E8%99%9A%E6%8B%9F%E6%9C%BA/jstat-%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 01 Mar 2023 08:34:41 +0800</pubDate>
      <guid>http://localhost:8080/java/java-%E8%99%9A%E6%8B%9F%E6%9C%BA/jstat-%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;jstat 是 JDK 自带的一个轻量级小工具，全称&amp;quot;Java Virtual Machine statistics monitoring tool&amp;quot;，位于&lt;code&gt;JAVA_HOME&lt;/code&gt;的bin目录下，主要利于 JVM 内建的指令对 Java 应用的资源和性能进行实时的命令行监控，包括对&lt;code&gt;内存&lt;/code&gt;与&lt;code&gt;垃圾回收&lt;/code&gt;状况的监控。&lt;/p&gt;&#xA;&lt;p&gt;官方文档：&lt;a href=&#34;https://docs.oracle.com/en/java/javase/14/docs/specs/man/jstat.html&#34;&gt;https://docs.oracle.com/en/java/javase/14/docs/specs/man/jstat.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;最常用命令为：&lt;code&gt;jstat -gcutil &amp;lt;pid&amp;gt;&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用方式&#34;&gt;使用方式&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;基本格式&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jstat -&amp;lt;option&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-t&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-h&amp;lt;lines&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;vmid&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;interval&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;count&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;参数说明&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;option&lt;/li&gt;&#xA;&lt;li&gt;-t&lt;/li&gt;&#xA;&lt;li&gt;-h&lt;/li&gt;&#xA;&lt;li&gt;vmid&lt;/li&gt;&#xA;&lt;li&gt;interval&lt;/li&gt;&#xA;&lt;li&gt;count&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;例子&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;简单使用案例&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -gcutil: 表示使用gcutil选项，即打印垃圾回收统计信息&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -t: 表示同时打印时间戳列&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# -h10: 表示每10行输出一次表头&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 14812: 为JVM的pid&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1000: 表示每1000毫秒即每秒打印一次&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 20: 表示仅打印20条就结束。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jstat -gcutil -t -h10 &lt;span style=&#34;color:#ae81ff&#34;&gt;14812&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$&amp;gt;jstat -gcutil -t -h10 &lt;span style=&#34;color:#ae81ff&#34;&gt;14812&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Timestamp         S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           89.9   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           90.9   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           91.9   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           93.0   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           94.0   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           95.0   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           96.0   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           97.0   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           98.0   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          100.8   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Timestamp         S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          101.9   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          102.9   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          103.9   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          104.9   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          105.9   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          106.9   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          108.0   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          109.0   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          110.0   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          111.0   0.00   0.00  68.05   0.00  17.38  19.94      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000     &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;    0.000    0.000&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中打印信息选项分类较多，以下针对每个选项进行详细说明。&lt;/p&gt;</description>
    </item>
    <item>
      <title>JVM 发生 GC 的时间点</title>
      <link>http://localhost:8080/java/java-%E8%99%9A%E6%8B%9F%E6%9C%BA/jvm-%E5%8F%91%E7%94%9F-gc-%E7%9A%84%E6%97%B6%E9%97%B4%E7%82%B9/</link>
      <pubDate>Wed, 01 Mar 2023 08:34:41 +0800</pubDate>
      <guid>http://localhost:8080/java/java-%E8%99%9A%E6%8B%9F%E6%9C%BA/jvm-%E5%8F%91%E7%94%9F-gc-%E7%9A%84%E6%97%B6%E9%97%B4%E7%82%B9/</guid>
      <description>&lt;p&gt;以下主要为 JVM 堆内存与 GC 相关知识点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;内存模型&#34;&gt;内存模型&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-figure&#34; data-lang=&#34;figure&#34;&gt;&#xD;&#xA;+----------------+--+--+----------------------------------------+&#xD;&#xA;|        8       | 1| 1|                   20                   |&#xD;&#xA;+================+==+==+========================================+&#xD;&#xA;|      eden      |S0|S1|                tenured                 |&#xD;&#xA;+================+==+==+========================================+&#xD;&#xA;|   Young Generation   |             Old Generation             |&#xD;&#xA;+----------------------+----------------------------------------+&#xD;&#xA;&#xD;&#xA;                 图示1：JVM 堆内存分代图&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;为什么堆要进行分代（JVM的堆内存基于Generation算法划分为新生代、老年代、永久代），因为每个对象的生命周期是不一样的，因此为了·提高垃圾回收的效率·，对不同生命周期的对象进行分代，并针对不同代采用最适合高效的垃圾回收算法，整体提升垃圾回收效率。&#xA;Java8以前永久代是放置在堆中，占用了老年代空间的，主要放置class等静态对象，容易出现性能问题或内存溢出，为解决此问题，Java8时永久代被取消，取而代之的升级为元空间（Meta Space），且不再放置在堆空间中，而是放置在宿主机的内存中（不在JVM），解决了以前永久代OOM问题。&lt;/p&gt;&#xA;&lt;p&gt;为什么会有奇怪的 From 与 To 这两块 Survivor 区域呢？原因是新生代因对象朝生夕死的特点，一般GC时只有少量存活，所以采用复制算法，这就把内存区域分为两块，每次仅使用其中一块，GC发生时把一块中的内容（仅选存活的对象）移到另一块中，原来一块的内存就全部回收清空了。优点是快速且避免内存碎片。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;堆内存分配策略&#34;&gt;堆内存分配策略&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;对象优先在 Eden 分配&lt;/li&gt;&#xA;&lt;li&gt;大对象直接进入老年代&lt;/li&gt;&#xA;&lt;li&gt;长期存活（默认15以上）对象将进入老年代&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;gc-发生时机&#34;&gt;GC 发生时机&lt;/h2&gt;&#xA;&lt;h3 id=&#34;第-1-种发生回收的时机点eden区空间不足即eden-space申请失败时期发生会发生-minor-gc即-scavenge-gc因对象朝生夕死特点只有少量存活采用复制算法&#34;&gt;第 1 种发生回收的时机点：Eden区空间不足，即Eden Space申请失败时期发生，会发生 Minor GC（即 Scavenge GC）【因对象朝生夕死特点，只有少量存活，采用复制算法】&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;S0不满：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Eden区（仅存活部分的对象）                         -&amp;gt; Survivor0 区（不满时）&lt;/li&gt;&#xA;&lt;li&gt;清空 Eden&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;S0已满：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Eden区（仅存活部分的对象）+ Survivor0 区（已满时） -&amp;gt; Survivor1 区&lt;/li&gt;&#xA;&lt;li&gt;清空 Eden + S0&lt;/li&gt;&#xA;&lt;li&gt;Survivor1 区 &amp;lt;-&amp;gt; Surivior0 区（交换S0与S1的空间，目的是保持S1为空）&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;S0已满，且S1不足以放置Eden + S0的存活对象（Survivor满不会引发Minor GC，而是把对象移到老年代）：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Eden + S0 存量对象 -&amp;gt; 老年代&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;躲过新生代存活区（S0 + S1）回收的存活对象，则年龄 +1，年龄满15（默认15）时移入老年代&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;S0 + S1 -&amp;gt; 老年代&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;为什么是15岁，原因是 HotSpot 会在对象头中的标记字段里记录年龄，分配到的空间只有4位，所以最多只能记录到15&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
