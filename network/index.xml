<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networks on Yipsen Ye</title>
    <link>http://localhost:8080/network/</link>
    <description>Recent content in Networks on Yipsen Ye</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 05 Jan 2024 08:34:41 +0800</lastBuildDate>
    <atom:link href="http://localhost:8080/network/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP2 协议完整介绍</title>
      <link>http://localhost:8080/network/%E5%8D%8F%E8%AE%AE/http2-%E5%8D%8F%E8%AE%AE/http2-%E5%8D%8F%E8%AE%AE%E5%AE%8C%E6%95%B4%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Fri, 05 Jan 2024 08:34:41 +0800</pubDate>
      <guid>http://localhost:8080/network/%E5%8D%8F%E8%AE%AE/http2-%E5%8D%8F%E8%AE%AE/http2-%E5%8D%8F%E8%AE%AE%E5%AE%8C%E6%95%B4%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;h2 id=&#34;http2-概述&#34;&gt;HTTP2 概述&lt;/h2&gt;&#xA;&lt;h3 id=&#34;http2-与-http11-的区别&#34;&gt;HTTP2 与 HTTP1.1 的区别&lt;/h3&gt;&#xA;&lt;p&gt;在 HTTP2 的网络通讯中，Frame 是通讯中的最小传输单位，至少含有一个 Frame Header，能够表示它属于哪一个 Stream。&lt;/p&gt;&#xA;&lt;h3 id=&#34;http11-有什么缺点问题-现行解决方案--http2-是如何来解决的&#34;&gt;HTTP1.1 有什么缺点（问题）&amp;amp; 现行解决方案 &amp;amp; HTTP2 是如何来解决的&lt;/h3&gt;&#xA;&lt;h2 id=&#34;http2-新增概念&#34;&gt;HTTP2 新增概念&lt;/h2&gt;&#xA;&lt;p&gt;帧、流（TCP 连接的复用，使用流概念逻辑划分以便达到多路复用方式）&lt;/p&gt;&#xA;&lt;p&gt;Stream 是 HTTP2 协议的核心，因为在 HTTP1.1 中，所有的请求都是在单个 TCP 连接上顺序发送的，HTTP2 引入了 Stream 的概念，Stream 实际是一个逻辑概念，是虚拟的，并非真实存在的对象，&lt;/p&gt;&#xA;&lt;p&gt;数据帧属于流，流属于连接。控制帧则直接属于连接级别。一个流即是过去 HTTP1.1 的一个请求/响应。&lt;/p&gt;&#xA;&lt;p&gt;引申问题：为什么说 TCP 连接是昂贵的&lt;/p&gt;&#xA;&lt;h2 id=&#34;http2-报文结构帧结构&#34;&gt;HTTP2 报文结构（帧结构）&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-figure&#34; data-lang=&#34;figure&#34;&gt;                   +-----------------------------------------------+&#xD;&#xA;                   |                 Length (24)                   |&#xD;&#xA;                   +---------------+---------------+---------------+&#xD;&#xA;                   |   Type (8)    |   Flags (8)   |&#xD;&#xA;                   +-+-------------+---------------+-------------------------------+&#xD;&#xA;                   |R|                 Stream Identifier (31)                      |&#xD;&#xA;                   +=+=============================================================+&#xD;&#xA;                   |                   Frame Payload (0...)                      ...&#xD;&#xA;                   +---------------------------------------------------------------+&#xD;&#xA;                   &#xD;&#xA;                                           图示1：帧结构&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;1-frame-head-帧头&#34;&gt;1. Frame Head (帧头)&lt;/h3&gt;&#xA;&lt;p&gt;帧头，主要用来放置当前帧的元数据，描述信息等，包括 Length(24)、Type(8)、Flags(8)、R(1)、Stream Identifier(31) 等5个字段，共9个字节。下面介绍这5个字段的含义：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Windows 本地公私钥生成</title>
      <link>http://localhost:8080/network/windows-%E6%9C%AC%E5%9C%B0%E5%85%AC%E7%A7%81%E9%92%A5%E7%94%9F%E6%88%90/</link>
      <pubDate>Mon, 23 May 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/windows-%E6%9C%AC%E5%9C%B0%E5%85%AC%E7%A7%81%E9%92%A5%E7%94%9F%E6%88%90/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;: 方式一：生成 keystore（JKS 格式）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;keytool -genkey -alias yipsen -keypass 123456 -keyalg RSA -keysize 1024 -validity 365 -keystore D:\yipsen.keystore -storepass 123456&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;: 方式二：生成 keystore (PKCS12 格式【推荐】)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;keytool -genkeypair -alias yipsen -keyalg RSA -keysize 2048 -validity 3650 -storetype PKCS12 -keystore yipsen.p12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;: 重置密码，会要求输入原密码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;keytool -storepasswd -new 123456 -keystore D:\yipsen.keystore&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;: 罗列 keystore 信息，会要求输入密码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;keytool -list -v -keystore D:\yipsen.keystore&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;: 导出为证书格式，会要求输入密码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;keytool -export -alias yipsen -keystore D:\yipsen.keystore -rfc -file D:\yipsen.cer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;: 转换 JKS 为 PKCS12 格式&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;keytool -importkeystore -srckeystore D:\yipsen.keystore -destkeystore D:\yipsen.p12 -deststoretype pkcs12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>01 基础知识（一）DHT 网络的演进</title>
      <link>http://localhost:8080/network/dht/01-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80dht-%E7%BD%91%E7%BB%9C%E7%9A%84%E6%BC%94%E8%BF%9B/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/dht/01-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80dht-%E7%BD%91%E7%BB%9C%E7%9A%84%E6%BC%94%E8%BF%9B/</guid>
      <description>&lt;h4 id=&#34;background-knowledge&#34;&gt;background knowledge&lt;/h4&gt;&#xA;&lt;h5 id=&#34;dht模块&#34;&gt;dht模块&lt;/h5&gt;&#xA;&lt;p&gt;dht模块实现一个dht节点，用来和网上的其他dht节点进行通信，在通信的过程中完成收集磁力链接的任务。&lt;/p&gt;&#xA;&lt;h5 id=&#34;bt模块&#34;&gt;bt模块&lt;/h5&gt;&#xA;&lt;p&gt;bt模块实现一个bt协议的客户端程序，当发现一个磁力链接可以下载的时候，通过bt客户端和远程的服务器通信，下载种子的元数据，&lt;/p&gt;&#xA;&lt;h5 id=&#34;原理解析&#34;&gt;原理解析&lt;/h5&gt;&#xA;&lt;h6 id=&#34;0x01-相关术语&#34;&gt;0x01 相关术语&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;P2P网络&#xA;对等计算（Peer to Peer，简称p2p）可以简单的定义成通过直接交换来共享计算机资源和服务，而对等计算模型应用层形成的网络通常称为对等网络。相信大家都用过迅雷，就不多说了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;DHT网络&#xA;DHT（Distributed Hash Table，分布式哈希表），DHT由节点组成，它存储peer的位置，是一种分布式存储方法。在不需要服务器的情况下，每个客户端负责一个小范围的路由，并负责存储一小部分数据，从而实现整个DHT网络的寻址和存储，其中BT客户端包含一个DHT节点，用来联系DHT中其他节点，从而得到peer的位置，进而通过BitTorrent协议下载。&#xA;简单来说DHT就是负责管理提供信息和服务节点的管理与路由功能，两个需要区分的概念：&#xA;“peer” 是在一个 TCP 端口上监听的客户端/服务器，它实现了 BitTorrent 协议。&#xA;“节点” 是在一个 UDP 端口上监听的客户端/服务器，它实现了 DHT(分布式哈希表) 协议。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Kademlia算法&#xA;Kademlia是DHT网络的一种实现。在Kademlia网络中，距离是通过异或(XOR)计算的，结果为无符号整数。distance(A, B) = |A xor B|，值越小表示越近。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;KRPC协议&#xA;KRPC 是节点之间的交互协议，是由 bencode 编码组成的一个简单的 RPC 结构，他使用 UDP 报文发送。一个独立的请求包被发出去然后一个独立的包被回复。这个协议没有重发。它包含 3 种消息：请求，回复和错误。对DHT协议而言，这里有 4 种请求：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;method&lt;/th&gt;&#xA;          &lt;th&gt;description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ping&lt;/td&gt;&#xA;          &lt;td&gt;检查一个节点是否有效&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;find_node&lt;/td&gt;&#xA;          &lt;td&gt;向一个节点发送查找节点的请求，在初始路由表或验证桶是否存活时使用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;get_peers&lt;/td&gt;&#xA;          &lt;td&gt;向一个节点发送查找资源的请求&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;announce_peer&lt;/td&gt;&#xA;          &lt;td&gt;向一个节点发送自己已经开始下载某个资源的通知&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;一条KRPC消息由一个独立的字典组成，其中t和y关键字是每条信息都包含的&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;MagNet协议&#xA;MagNet协议，也就是磁力链接。是一个通过sha1算法生成一个20字节长的字符串，P2P客户端使用磁力链接，下载资源的种子文件，然后根据种子文件下载资源。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;因已有现成的脚本实现，只需要对相关协议有个大概了解就可以动手了。&lt;/p&gt;&#xA;&lt;h6 id=&#34;002-dht爬虫&#34;&gt;0×02 DHT爬虫&lt;/h6&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;实现原理&#xA;伪装成DHT节点加入DHT网络中收集信息，DHT中node（加入网络的时候随机生成）与infohash都是使用160bit的表示方式，也就是40位的16进制，意味着数量级有2^160，爬虫主要收集get_peer、announce_peer这两个请求的信息&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;get_peer&#xA;get_peers与torrent文件的infohash有关，找到待查资源是否有peer。这时KPRC中的q=get_peers，其中包含节点id和info_hash两个参数，如果被请求的节点有对应info_hash的peers，将返回一个关键字values，如果无则返回关键字nodes，同时也返回一个token，token在annouce_peer中需要携带。&lt;/p&gt;</description>
    </item>
    <item>
      <title>02 基础知识（二）Kademlia 算法</title>
      <link>http://localhost:8080/network/dht/02-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%8Ckademlia-%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/dht/02-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%8Ckademlia-%E7%AE%97%E6%B3%95/</guid>
      <description></description>
    </item>
    <item>
      <title>03 基础知识（三）KRPC 协议解析</title>
      <link>http://localhost:8080/network/dht/03-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%89krpc-%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/dht/03-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%89krpc-%E5%8D%8F%E8%AE%AE%E8%A7%A3%E6%9E%90/</guid>
      <description>&lt;h4 id=&#34;请求样例&#34;&gt;请求样例&lt;/h4&gt;&#xA;&lt;p&gt;[SAMPLE_INFOHASHES]&#xA;{&#xA;&amp;ldquo;ip&amp;rdquo;:&amp;ldquo;127.0.0.1&amp;rdquo;,&#xA;&amp;ldquo;port&amp;rdquo;:&amp;ldquo;7000&amp;rdquo;,&#xA;&amp;ldquo;message&amp;rdquo;:{&#xA;&amp;ldquo;t&amp;rdquo;:&amp;ldquo;7348&amp;rdquo;,&#xA;&amp;ldquo;y&amp;rdquo;:&amp;ldquo;q&amp;rdquo;,&#xA;&amp;ldquo;q&amp;rdquo;:&amp;ldquo;sample_infohashes&amp;rdquo;,&#xA;&amp;ldquo;a&amp;rdquo;:{&#xA;&amp;ldquo;id&amp;rdquo;:&amp;ldquo;832545b71150635d4970c548ba0918a8085023f2&amp;rdquo;,&#xA;&amp;ldquo;target&amp;rdquo;:&amp;ldquo;29dbf3a3a69a336921569e900bb131efda2e7ff4&amp;rdquo;&#xA;}&#xA;}&#xA;}&lt;/p&gt;&#xA;&lt;p&gt;[ANNOUNCE_PEER]&#xA;{&#xA;&amp;ldquo;ip&amp;rdquo;:&amp;ldquo;112.113.162.69&amp;rdquo;,&#xA;&amp;ldquo;port&amp;rdquo;:&amp;ldquo;17535&amp;rdquo;,&#xA;&amp;ldquo;message&amp;rdquo;:{&#xA;&amp;ldquo;t&amp;rdquo;:&amp;ldquo;a7f4&amp;rdquo;,&#xA;&amp;ldquo;y&amp;rdquo;:&amp;ldquo;q&amp;rdquo;,&#xA;&amp;ldquo;q&amp;rdquo;:&amp;ldquo;announce_peer&amp;rdquo;,&#xA;&amp;ldquo;a&amp;rdquo;:{&#xA;&amp;ldquo;id&amp;rdquo;:&amp;ldquo;ef41813e6f2555438722462f24a10db858106887&amp;rdquo;,&#xA;&amp;ldquo;info_hash&amp;rdquo;:&amp;ldquo;186ef18044f042ef759e3f48b7aa284c9c084ed1&amp;rdquo;,&#xA;&amp;ldquo;port&amp;rdquo;:7071,&#xA;&amp;ldquo;token&amp;rdquo;:&amp;ldquo;TENET&amp;rdquo;&#xA;}&#xA;}&#xA;}&lt;/p&gt;</description>
    </item>
    <item>
      <title>04 基础知识（四）Bencode 编码</title>
      <link>http://localhost:8080/network/dht/04-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%9B%9Bbencode-%E7%BC%96%E7%A0%81/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/dht/04-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%9B%9Bbencode-%E7%BC%96%E7%A0%81/</guid>
      <description></description>
    </item>
    <item>
      <title>05 基础知识（五）Magnet 磁链与 Torrent 文件</title>
      <link>http://localhost:8080/network/dht/05-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%94magnet-%E7%A3%81%E9%93%BE%E4%B8%8E-torrent-%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/dht/05-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%94magnet-%E7%A3%81%E9%93%BE%E4%B8%8E-torrent-%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;h2 id=&#34;magnet-磁链结构&#34;&gt;MAGNET 磁链结构&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;magnet:?xt=urn:btih:60c423137f453492ca34c2d69f6f573408dca35a&amp;amp;dn=Inglourious.Basterds.DVDRip.XviD-iMBT.avi&amp;amp;tr=http%3A%2F%2Ftracker.publicbt.com%2Fannounce&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;字段&lt;/th&gt;&#xA;          &lt;th&gt;全称&lt;/th&gt;&#xA;          &lt;th&gt;解析&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;magnet&lt;/td&gt;&#xA;          &lt;td&gt;magnet&lt;/td&gt;&#xA;          &lt;td&gt;协议名。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;xt&lt;/td&gt;&#xA;          &lt;td&gt;exact topic&lt;/td&gt;&#xA;          &lt;td&gt;包含文件哈希值的统一资源名称。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;urn&lt;/td&gt;&#xA;          &lt;td&gt;uniform resource name&lt;/td&gt;&#xA;          &lt;td&gt;URN 表示资源名&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;btih&lt;/td&gt;&#xA;          &lt;td&gt;BitTorrent info hash&lt;/td&gt;&#xA;          &lt;td&gt;种子散列函数，这里还可以使用ED2K，AICH，SHA1和MD5等。这个值是文件的标识符，是不可缺少的。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;dn&lt;/td&gt;&#xA;          &lt;td&gt;display name&lt;/td&gt;&#xA;          &lt;td&gt;表示向用户显示的文件名。这一项是选填的。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;tr&lt;/td&gt;&#xA;          &lt;td&gt;tracker&lt;/td&gt;&#xA;          &lt;td&gt;表示tracker服务器的地址。这一项也是选填的。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;ws&lt;/td&gt;&#xA;          &lt;td&gt;webseed&lt;/td&gt;&#xA;          &lt;td&gt;表示网络种子。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;注：btih是应用程序定义的实验参数，必须以&amp;quot;x.&amp;ldquo;开头。[4-5] 标准还建议同类的多个参数可以在参数名称后面加上&amp;rdquo;.1&amp;quot;, &amp;ldquo;.2&amp;quot;等来使用，&#xA;例如： magnet:?xt.1=urn:sha1:YNCKHTQCWBTRNJIV4WNAE52SJUQCZO5C&amp;amp;xt.2=urn:sha1:TXGCZQTH26NL6OUQAJJPFALHG2LTGBC7&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;torrent-文件结构&#34;&gt;TORRENT 文件结构&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;announce&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,              &lt;span style=&#34;color:#75715e&#34;&gt;// tracker的主服务器&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;announce-list&amp;#34;&lt;/span&gt;: [],         &lt;span style=&#34;color:#75715e&#34;&gt;// tracker服务器列表&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;comment&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,               &lt;span style=&#34;color:#75715e&#34;&gt;// 种子文件的注释&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;comment.utf-8&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,         &lt;span style=&#34;color:#75715e&#34;&gt;// 种子文件的注释(UTF-8编码格式)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;creation date&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,          &lt;span style=&#34;color:#75715e&#34;&gt;// 种子文件的创建时间，格式为时间戳&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;encoding&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,              &lt;span style=&#34;color:#75715e&#34;&gt;// 种子文件的默认编码，比如GB2312，Big5，utf-8等&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;info&amp;#34;&lt;/span&gt;: {                    &lt;span style=&#34;color:#75715e&#34;&gt;// 种子的实际资源信息，包含所有的文件信息&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,                &lt;span style=&#34;color:#75715e&#34;&gt;// 推荐的文件/文件夹名，下载时可更改&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name.utf-8&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,          &lt;span style=&#34;color:#75715e&#34;&gt;// 推荐的文件/文件夹名(UTF-8编码格式)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;pieces&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,              &lt;span style=&#34;color:#75715e&#34;&gt;// 资源总内容分块后，每块内容的SHA1值连接起来的二进制串&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;piece length&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,         &lt;span style=&#34;color:#75715e&#34;&gt;// 资源总内容分块后，每块内容的大小，单位是字节Byte&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;publisher&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,           &lt;span style=&#34;color:#75715e&#34;&gt;// 文件发布者的名字&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;publisher.utf-8&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;// 文件发布者的名字(UTF-8编码格式)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;publisher-url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,       &lt;span style=&#34;color:#75715e&#34;&gt;// 文件发布者的网址&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;publisher-url.utf-8&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// 文件发布者的网址(UTF-8编码格式)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;length&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,               &lt;span style=&#34;color:#75715e&#34;&gt;// 如果该种子包含单个文件，则表示文件的大小(单位字节)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;files&amp;#34;&lt;/span&gt;: [{                &lt;span style=&#34;color:#75715e&#34;&gt;// 如果该种子包含多个文件，则所有文件信息在该数组中&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;length&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,             &lt;span style=&#34;color:#75715e&#34;&gt;// 文件的大小，单位是字节Byte&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,              &lt;span style=&#34;color:#75715e&#34;&gt;// 文件的名字，在下载时不可更改&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;path.utf-8&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;// 文件的名字(UTF-8编码格式)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;nodes&amp;#34;&lt;/span&gt;: []                  &lt;span style=&#34;color:#75715e&#34;&gt;// DHT初始node节点列表，包含node机器的连接信息ip/port等&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;注：pieces为资源的特征信息，为便于分段分享下载，会对资源总内容按piece length分块。分块后每块内容计算出的SHA1值为20字节，所以该字段的长度总是20字节的整数倍。如果是大文件而分块又很细，则此字段内容将很大，因为块数更多了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>06 基础知识（六）μTP 协议</title>
      <link>http://localhost:8080/network/dht/06-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%AD%CE%BCtp-%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/dht/06-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%AD%CE%BCtp-%E5%8D%8F%E8%AE%AE/</guid>
      <description></description>
    </item>
    <item>
      <title>08 爬虫设计（一）模块划分与核心逻辑</title>
      <link>http://localhost:8080/network/dht/08-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%A8%A1%E5%9D%97%E5%88%92%E5%88%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E9%80%BB%E8%BE%91/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/dht/08-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%A8%A1%E5%9D%97%E5%88%92%E5%88%86%E4%B8%8E%E6%A0%B8%E5%BF%83%E9%80%BB%E8%BE%91/</guid>
      <description></description>
    </item>
    <item>
      <title>09 爬虫设计（二）核心组件-路由表设计</title>
      <link>http://localhost:8080/network/dht/09-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%BA%8C%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6-%E8%B7%AF%E7%94%B1%E8%A1%A8%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/dht/09-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%BA%8C%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6-%E8%B7%AF%E7%94%B1%E8%A1%A8%E8%AE%BE%E8%AE%A1/</guid>
      <description></description>
    </item>
    <item>
      <title>10 爬虫设计（三）使用 Netty 的 Handle 链与统一异常处理</title>
      <link>http://localhost:8080/network/dht/10-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%B8%89%E4%BD%BF%E7%94%A8-netty-%E7%9A%84-handle-%E9%93%BE%E4%B8%8E%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/dht/10-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E4%B8%89%E4%BD%BF%E7%94%A8-netty-%E7%9A%84-handle-%E9%93%BE%E4%B8%8E%E7%BB%9F%E4%B8%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid>
      <description></description>
    </item>
    <item>
      <title>11 爬虫设计（四）监控采集</title>
      <link>http://localhost:8080/network/dht/11-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E5%9B%9B%E7%9B%91%E6%8E%A7%E9%87%87%E9%9B%86/</link>
      <pubDate>Sun, 16 Jan 2022 16:31:43 +0000</pubDate>
      <guid>http://localhost:8080/network/dht/11-%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1%E5%9B%9B%E7%9B%91%E6%8E%A7%E9%87%87%E9%9B%86/</guid>
      <description></description>
    </item>
    <item>
      <title>iptables 详解</title>
      <link>http://localhost:8080/network/iptables-%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Sat, 15 Jan 2022 10:40:52 +0800</pubDate>
      <guid>http://localhost:8080/network/iptables-%E8%AF%A6%E8%A7%A3/</guid>
      <description></description>
    </item>
    <item>
      <title>SSH 登录过程</title>
      <link>http://localhost:8080/network/ssh-%E7%99%BB%E5%BD%95%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sat, 15 Jan 2022 10:40:52 +0800</pubDate>
      <guid>http://localhost:8080/network/ssh-%E7%99%BB%E5%BD%95%E8%BF%87%E7%A8%8B/</guid>
      <description>&lt;h2 id=&#34;一ssh登录&#34;&gt;一、SSH登录&lt;/h2&gt;&#xA;&lt;h3 id=&#34;ssh登录流程&#34;&gt;SSH登录流程&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sequenceDiagram&#xD;&#xA;  participant A as User Host A&#xD;&#xA;  participant B as Server Host B&#xD;&#xA;&#xD;&#xA;  A -&amp;gt;&amp;gt; B : 发送SSH登录请求&#xD;&#xA;  B -&amp;gt;&amp;gt; A : 发送公钥bbb.pub给用户&#xD;&#xA;  A -&amp;gt;&amp;gt; A : 使用公钥bbb.pub加密登录密码&#xD;&#xA;  A -&amp;gt;&amp;gt; B : 发送加密后的登录密码&#xD;&#xA;  B -&amp;gt;&amp;gt; B : 使用私钥bbb进行解密&#xD;&#xA;  opt 密码正确&#xD;&#xA;    B -&amp;gt;&amp;gt; A : 登录成功&#xD;&#xA;  end&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;二公钥登录&#34;&gt;二、公钥登录&lt;/h2&gt;&#xA;&lt;h3 id=&#34;公钥登录流程&#34;&gt;公钥登录流程&lt;/h3&gt;&#xA;&lt;p&gt;公钥登录方式跟SSH登录方式有所不同。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;首先发布公钥&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sequenceDiagram&#xD;&#xA;  participant A as User Host A&#xD;&#xA;  participant B as Server Host B&#xD;&#xA;&#xA;    A -&amp;gt;&amp;gt; B : 发布自己的公钥aaa.pub给服务器&#xD;&#xA;    B -&amp;gt;&amp;gt; B : 保存用户公钥aaa.pub&#xD;&#xA;    Note right of A : 公钥一般会被保存在如用户主目录的$HOME/.ssh/authorized_keys下&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;之后登录或认证&lt;/p&gt;</description>
    </item>
    <item>
      <title>协议</title>
      <link>http://localhost:8080/network/%E5%8D%8F%E8%AE%AE/%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Sat, 15 Jan 2022 10:40:52 +0800</pubDate>
      <guid>http://localhost:8080/network/%E5%8D%8F%E8%AE%AE/%E5%8D%8F%E8%AE%AE/</guid>
      <description>&lt;p&gt;协议 = 数据格式 + 一整套交互方案 = 协议提供（或说承诺）的各种特性，以解决特定实际需求问题。也可以理解为对宽广自由的网络交互提出的约束。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
